/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package challenge;

import org.junit.jupiter.api.AfterAll;
import org.junit.jupiter.api.BeforeAll;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;

import java.time.LocalDate;
import java.time.Month;
import java.time.format.DateTimeFormatter;
import java.time.format.DateTimeParseException;
import java.util.Map;

import static org.junit.jupiter.api.Assertions.*;

class AppTest {

    private static AppDriver appDriver;
    private static YamlElements yml;
    private static Map<String, String> ymlElements;
    private static LocalDate desiredDate ;

    @BeforeAll
    static void setUp() {
        try {
            // Date should be written as next: yyyy-mm-dd
            // where y - year; m - month; d - day.
            desiredDate = LocalDate.parse("2020-02-02");
        } catch (DateTimeParseException e){
            System.out.println("Please check date input format: " +
                    "yyyy-mm-dd where y - year; m - month; d - day. " +
                    "Example for 31 January 2000: 2000-01-31");
            System.exit(0);
        }
        try {
            // Loading yaml file with app elements
            yml = new YamlElements();
            ymlElements = yml.getYmlElements();
            // Appium driver
            appDriver = new AppDriver();
            appDriver.setup();
            appDriver.showDesiredDate(desiredDate);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Test
    @DisplayName("Expected year selected")
    void yearSelectedCorrect() {
        String year = appDriver.getTextId("id_header_year");
        assertEquals(LocalDate.now().getYear(), Integer.parseInt(year));
    }

    @Test
    @DisplayName("Expected month selected")
    void monthSelectedCorrect() {
        String out = appDriver.getTextId("id_header_date");
        String month = out.substring(5, 8);
        String expectedMonth = desiredDate.format(DateTimeFormatter.ofPattern("MMM"));
        assertEquals(expectedMonth, month);
    }

    @Test
    @DisplayName("Expected date selected")
    void dateSelectedCorrect() {
        String out = appDriver.getTextId("id_header_date");
        String date = out.substring(out.length() - 1, out.length());
        assertEquals(2, Integer.parseInt(date));
    }

    @AfterAll
    static void killDriver() {
        appDriver.quit();
    }
}
